// VLISP - Jan 2012

proto main 0;;
proto earsInit 0;;
proto evalTrame 1;;

#include "../ext/bytecode/lib/var"
#include "../ext/bytecode/lib/util"
#include "../ext/bytecode/lib/cfg"
#include "../ext/bytecode/lib/arp"
#include "../ext/bytecode/lib/udp"
#include "../ext/bytecode/lib/tcp"
#include "../ext/bytecode/lib/dns"
#include "../ext/bytecode/lib/http"
#include "../ext/bytecode/lib/dhcp"
#include "lib/data_helper"
#include "lib/buffer"
#include "../ext/bytecode/lib/wifi"

var recordingStartedAt = 0;;
var bmp = 0;;
var recSeconds = 0;;

//-------------------- HTTP Endpoints
fun logUrl=
  strcatlist confGetServerUrl::"/api/log.jsp"::nil;;

fun buttonPressedUrl data=
  strcatlist confGetServerUrl::"/api/button-pressed.jsp?duration="::(itoa data)::nil;;

fun recordingFinishedUrl =
  strcatlist confGetServerUrl::"/api/recording-finished.jsp"::nil;;

fun rfidUrl tag=
  strcatlist confGetServerUrl::"/api/rfid.jsp?id="::(webmac tag)::nil;;

//-------------------- HTTP

fun _cbdummyhttp http res=
  0;;

fun _cbHttp http res=
  evalTrame res;
  0;;

#include "lib/record"

fun evalTrame res=
  let parseResponse httpgetcontent res -> bufferlist in
    if bufferlist != nil then
    (
      for l = bufferlist; l != nil; tl l do
      (
        let hd l -> [code val] in
        if code == 12 then // OK
        (
          0
        )
        else if code == 16 then // (RE) INIT
        (
          earsInit;
          0
        )
        else if code == 17 then // LOG
        (
          httprequest "POST" logUrl (strcat "logs=" logs) #_cbdummyhttp HTTP_NORMAL;
          set logs = "";
          0
        )
        else if code == 18 then // ERROR
        (
          0
        )
        else if code == 19 then // REBOOT
        (
          exit
        )
        // led buffers: short 20-24 loop 25-29; 3Byte: short 30-34 loop 35-39
        else if code >= 20 && code <= 39 then
        (
          let code % 10 -> index in
          let 2 * (code / 30) + 1 -> step in
          let index / 5 -> loop in
          _bufferFill index step loop val;
          0
        )
        // ear buffers: short 40-41, loop 42-43
        else if code >= 40 && code <= 43 then
        (
          let code % 10 -> index in
          let 1 -> step in
          let index / 2 -> loop in
          _bufferFill index+10 step loop val;
          0
        )
        // recodring
        else if code == 50 then
        (
          set recSeconds = strget val 0;
          set recSeconds = 1000 * recSeconds;
          recordingStart;
          set recordingStartedAt = time_ms
        )
        else if code == 51 then
        (
          recordingStop
        )
        else if code == 60 then
        (
          led 0 0;
          set bmp = strget val 0;
          if bmp > 0 then
          (
            set bmp = 60000 / bmp
          )
        )
      )
    )
;;

//inputs
// #include "lib/rfid"
#include "lib/button"

//outputs
#include "lib/led"
#include "lib/ear"

var n = 0;;
var last = 0;;

//###############################################
//-------------------- LOOP ---------------------
fun loop=
  wifiRun;
  wifiCheck;

  // checkRFID;
  checkButton;

  setLeds;
  earRead 0;
  earRead 1;

  if button3 > 254 then
  (
    exit
  );

  if recording == 1 && recSeconds > 0 && (time_ms - recordingStartedAt) > recSeconds  then
  (
    recordingStop
  );

  if bmp > 0 && time_ms - last > bmp then
  (
    if n > 10 then
    (
      set n = 0
    )
    else
    (
      set n = 255
    );
    led 0 n;
    set last = time_ms;
    0
  );
0;;

//###############################################
//-------------------- MAIN ---------------------
fun main=
  confInit;
  wifiInit 0;
  buffersInit 14;
  earsInit;

  loopcb #loop; // 20 p. second

  netstart;
  startdnsclient;

  sndVol 0;
  srand time_ms;
0;;
