#!/usr/bin/env ruby
# frozen_string_literal: true

BIN_NAME    = 'mtl_compiler'
BIN_PATH    = File.dirname(__FILE__)
BIN         = File.join(File.expand_path('../mtl_linux', BIN_PATH), BIN_NAME)
FILE        = ARGV.first

FILTER      = ENV['FILTER'] || "| grep -v 'bytes' | grep -e'[a-z]'"
MERGE       = File.join(BIN_PATH, 'mtl_merge')
TMP         = ENV['TMP'] || '.tmp.mtl'
OUT         = ENV['OUT'] || 'bytecode.bin'

unless FILE
  puts "usage: #{File.basename(__FILE__)} [filename]"
  abort
end

# merge
`TMP='#{TMP}' #{MERGE} #{FILE}`

# compile
out = if File.exist?(BIN)
        `#{BIN} -s #{TMP} #{OUT} 2>&1 #{FILTER}`
      else
        "local binary not found: #{BIN}"
      end

puts out
`rm #{TMP}`
